@page "/"
@using BlazorMedia
@using System.IO
@using System.Diagnostics
@inject IJSRuntime JS
@inject IComponentContext ComponentContext

@if (BlazorMediaAPI.Initialized)
{
    <VideoMedia OnDataReceived="@OnDataReceived" Timeslice="0" />
}
<button @onclick="@OnStart">START</button>
@functions {

    #region Hack to fix https://github.com/aspnet/AspNetCore/issues/11159

    public static object CreateDotNetObjectRefSyncObj = new object();

    protected DotNetObjectRef<T> CreateDotNetObjectRef<T>(T value) where T : class
    {
        lock (CreateDotNetObjectRefSyncObj)
        {
            JSRuntime.SetCurrentJSRuntime(JS);
            return DotNetObjectRef.Create(value);
        }
    }

    protected void DisposeDotNetObjectRef<T>(DotNetObjectRef<T> value) where T : class
    {
        if (value != null)
        {
            lock (CreateDotNetObjectRefSyncObj)
            {
                JSRuntime.SetCurrentJSRuntime(JS);
                value.Dispose();
            }
        }
    }

    #endregion

    protected override Task OnInitAsync()
    {
        return base.OnInitAsync();
    }

    protected override async Task OnAfterRenderAsync()
    {
        if (!ComponentContext.IsConnected)
        {
            return;
        }

        if (!BlazorMediaAPI.Initialized)
        {
            await BlazorMediaAPI.InitializeMediaStream(JS, 1024, 768, true);
            this.StateHasChanged();
        }

        await base.OnAfterRenderAsync();
    }

    protected async void OnDataReceived(byte[] data)
    {
        Console.WriteLine($"Data Recieved of length: {data.Length}");
    }

    protected void OnStart()
    {
    }
}